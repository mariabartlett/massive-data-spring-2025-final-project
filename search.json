[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Designing a data pipeline to analyze gender equity in college sports",
    "section": "",
    "text": "Project background & site overview"
  },
  {
    "objectID": "policy-context.html",
    "href": "policy-context.html",
    "title": "Designing a data pipeline to analyze gender equity in college sports",
    "section": "",
    "text": "In the United States, gender disparities between men and women are a pervasive and complex issue. Protecting individuals’ rights to opportunity is a key aspect of America’s national identity. During the civil rights movement of the 1960s and 1970s, Congress enacted legislation that made sex-based discrimination illegal in certain environments. Specifically in 1972, Congress passed Title IX, which prohibits sex-based discrimination in educational institutions that receive federal funding (NWLC, 2022a). This not only includes any admission or classroom activities but also mandates that schools allocate athletic participation opportunities in a nondiscriminatory way (NWLC, 2022b).\nOver the last fifty years, Congress and the Department of Education have continued to update the guidance and protocols for Title IX to better monitor its compliance. In 1979, the Department of Education established that institutions’ intercollegiate athletics program must meet one of three criteria to be considered in compliance: 1.) The number of male and female athletes is substantially proportionate to their respective enrollments. 2.) The institution has a history and continuing practice of expanding participation opportunities responsive to the developing interests and abilities of the underrepresented sex\n3.) The institution is fully and effectively accommodating the interests and abilities of the underrepresented sex. (Office of Civil Rights, n.d.) Several years later, Congress enacted the Equity in Athletics Disclosure Act (EADA) in 1994 to make it easier to track Title IX compliance in higher education institutions. The EADA requires colleges and universities that (1) receive federal financial assistance (Title IV Federal Student Aid) and that (2) sponsor intercollegiate athletics to report data annually on male and female athletics participation, staffing issues for the male and female athletic teams, and the revenues and expenses for the male and female athletic teams to the Department of Education (NCAA, n.d.). The data is then made publicly available through the Department of Education’s website (NCAA, n.d.)."
  },
  {
    "objectID": "data-pipeline.html",
    "href": "data-pipeline.html",
    "title": "Designing a data pipeline to analyze gender equity in college sports",
    "section": "",
    "text": "Data pipeline\nOur analysis of gender equity in college sports required a robust data processing infrastructure to handle the EADA datasets. We implemented a cloud-based pipeline using AWS services to ensure scalability and reproducibility.\nThe EADA data contains multiple years of information across hundreds of institutions, with dozens of metrics for each sport and gender combination. This volume and complexity of data necessitated a solution beyond local computing resources. We selected AWS as our cloud provider due to its comprehensive suite of data processing services and strong integration capabilities.\n\n\nSTEP 1: Raw Data Upload to S3\nWe begin by storing our raw EADA CSV files in Amazon S3. These datasets contain critical gender equity indicators including team roster sizes, coaching staff compensation, recruitment expenses, and scholarship allocations.\nOur Schools.csv file contains sport-specific data across institutions, including participation numbers and expenses separated by gender. The instLevel.csv file provides institution-wide metrics such as total athletics revenue and gender proportionality measurements. Both files contain sensitive financial information that benefits from S3’s security features, while remaining accessible for our gender equity analysis.\n\n\n\nSTEP 2: Cluster Setup with EMR\nAnalyzing gender disparities across hundreds of institutions and dozens of sports requires significant computing power, especially for our unsupervised learning approach. We launched an Amazon EMR cluster to handle the dimensionality reduction and clustering analyses needed to identify patterns in athletic department spending and participation across genders. Our EMR environment included Spark for distributed processing of the equity metrics and Jupyter for interactive analysis. While a single-node cluster proved sufficient for our initial investigation into gender gaps in basketball and track programs, EMR’s scalability would accommodate future analyses of all NCAA sports across multiple divisions and years—expanding our understanding of gender equity trends. \n\n\nSTEP 03: Launch Jupyter on EMR using SSH\nOnce the EMR cluster is active, we SSH into the EC2 Master node and manually start a Jupyter Notebook server on it. This gives us a familiar, browser-based Python environment where we can fetch data from S3, run our analysis, and visualize the output. This step requires setting up SSH tunneling so that we can access the notebook from our local browser securely.\n\n\nSTEP 04: Load & Analyze Data\nIn the notebook, we use boto3 to connect to S3 and load our datasets into Pandas for analysis. We then run exploratory data analysis (EDA), correlation checks, visualizations, and prepare our results for export. Detailed analysis will be dicussed in the next section\n\nAfter completing our analytical transformations, the processed gender equity datasets are stored back in our S3 bucket in a structured format. By returning these processed datasets to S3, we maintain a complete data lineage from raw EADA submissions to final analytical outputs. This approach ensures reproducibility and allows team members to access the processed data through various tools, including direct connections from R for the visualization work presented in our exploratory and unsupervised learning sections. The S3 storage also facilitates version control as we refine our equity analyses over time, enabling us to track changes in gender disparities across multiple academic years of athletic department operations."
  },
  {
    "objectID": "analyses.html",
    "href": "analyses.html",
    "title": "Designing a data pipeline to analyze gender equity in college sports",
    "section": "",
    "text": "Analytics\n\nExploratory\nThis section takes a closer look at disparities, and trends in gender representation across institutions and sports. By analyzing participation rates, expenses, operating expenses, and revenue, the goal is to surface both progress and persistent gaps in gender equality. These visualizations below show the many outliers that exist throughout each of these areas.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUnsupervised\n\nInstitution Level\nUsing Principle Component Analysis (PCA) and K-means clustering, practicioners are able to better understand universities that are similar to each other in their sports equity. Below, there are five clusters, which seem to emerge based on school sizes. On the far right side of the graph is the large universities with higher amounts of spending and larger teams. These universities do skew the graph a bit since they are spending so much more on their sports teams in comparison to the many small schools that are primarily on the left side of the graph.\n\n\n\n\n\n\n There are additional use cases where a school administrator may want to see similar universities to their own in this clustering algorithm. The next two examples show what administrators for schools like Georgetown or Furman might see when entering in their own universities and finding their nearest neighbors. Some of the results may be obvious, but others may be less so, leading to a reason for different schools to connect on their gender equity in sports and how they can improve or understand other programs. For example, Georgetown is close to many schools in their conference, but schools like East Carolina and Old Dominion are not far away from them and would maybe be less obvious schools to connect with. \n\n\n\n\n\n\n As for Furman, the schools nearest to them seem much less intuitive, with most being on the west coast which is quite the distance from the South Carolina school. These connections could help to facilitate unique discussions on how gender equity can be improved across various regions. \n\n\n\n\n\n\n\n\nSport Level\nAnother use case is to compare gender by sport. Again, using PCA a scatterplot can be created and filtered by sport to see the differences by gender. Below, there is a plot for Basketball, where one can see that men’s teams differ drastically from women’s teams.\n\n\n\n\n\n\n\nWhen looking in comparison at Cross Country/Track & Field, we see much fewer discrepancies between men’s and women’s teams."
  },
  {
    "objectID": "institution-reports.html",
    "href": "institution-reports.html",
    "title": "Designing a data pipeline to analyze gender equity in college sports",
    "section": "",
    "text": "In this section, we present a potential future use for the EADA data that is well-suited for a cloud computing environment, has high potential value for academic institutions, and is remarkably efficient to execute.\n\n\nThe institution-level structure of the EADA files are ideal for generating standardized, institution-specific reports that provide a snapshot of the sports equity landscape at the institution. Because multiple years of data are available, it is also highly feasible to generate cross-year institution comparison reports, either for a particular institution or for the entire institution universe. Because each file contains 1,800+ institutions and reports are not dependent on one another, this is an ideal task to parallelize in a cloud environment.\n\n\n\nIn this section, we present a tutorial on how to prepare year-specific snapshot files for a set of institutions using R. For the purpose of this tutorial, we deployed these steps locally on a small subset of institutions. However, in the final section, we will discuss thoughts for scaling this task up for execution in the cloud.\n\n\nBelow, we illustrate the structure of the EADA data for five institutions from the 2022-23 EADA file (with the first 30 variables).\n\n\n\n\nunitid\nOPEID\ninstitution_name\naddr1_txt\naddr2_txt\ncity_txt\nstate_cd\nzip_text\nClassificationCode\nclassification_name\nClassificationOther\nEFMaleCount\nEFFemaleCount\nEFTotalCount\nsector_cd\nsector_name\nSTUDENTAID_MEN\nSTUDENTAID_WOMEN\nSTUDENTAID_COED\nSTUDENTAID_TOTAL\nSTUAID_MEN_RATIO\nSTUAID_WOMEN_RATIO\nSTUAID_COED_RATIO\nRECRUITEXP_MEN\nRECRUITEXP_WOMEN\nRECRUITEXP_COED\nRECRUITEXP_TOTAL\nHDCOACH_SALARY_MEN\nHDCOACH_SALARY_WOMEN\nHDCOACH_SALARY_COED\n\n\n\n\n131496\n00144500\nGeorgetown University\n37th and O St NW\nGeorgetown University\nWashington\nDC\n200570001\n2\nNCAA Division I-FCS\nNA\n2995\n4153\n7148\n2\nPrivate nonprofit, 4-year or above\n5559743\n5871423\n2478\n11433644\n49\n51\n0\n997498\n153634\n7467\n1158599\n580565\n103748\n109326\n\n\n170976\n00232500\nUniversity of Michigan-Ann Arbor\n1109 Geddes Ave\nNA\nAnn Arbor\nMI\n48109\n1\nNCAA Division I-FBS\nNA\n14705\n16443\n31148\n1\nPublic, 4-year or above\n17929935\n13947339\nNA\n31877274\n56\n44\n0\n3876973\n940960\nNA\n4817933\n1086369\n258780\nNA\n\n\n198419\n00292000\nDuke University\n103 Allen Bldg\nNA\nDurham\nNC\n27708\n1\nNCAA Division I-FBS\nNA\n3114\n3429\n6543\n2\nPrivate nonprofit, 4-year or above\n14309544\n13291616\nNA\n27601160\n52\n48\n0\n2459555\n574848\nNA\n3034403\n687176\n209582\nNA\n\n\n199120\n00297400\nUniversity of North Carolina at Chapel Hill\n103 South Bldg Cb 9100\nNA\nChapel Hill\nNC\n27599\n1\nNCAA Division I-FBS\nNA\n7532\n11630\n19162\n1\nPublic, 4-year or above\n8398938\n6738951\nNA\n15137889\n55\n45\n0\n2155890\n848579\nNA\n3004469\n747659\n255997\nNA\n\n\n218070\n00343400\nFurman University\n3300 Poinsett Highway\nNA\nGreenville\nSC\n296136162\n2\nNCAA Division I-FCS\nNA\n928\n1331\n2259\n2\nPrivate nonprofit, 4-year or above\n7852046\n4732379\nNA\n12584425\n62\n38\n0\n263225\n141196\nNA\n404421\n196422\n99950\nNA\n\n\n\n\n\n\n\n\n\nNext, we identify key statistics we want each report to contain. We will present:\n\nA table with the total number of sports offered, by gender\nA table with the number of students participating in each sport, by gender\nA figure with average full−time coaching salary, by team gender and coach type (head vs. assistant)\n\nIn the following sections, we will discuss key code chunks from our reports_template.qmd file. This is the script that provides the template for our PDF reports. The full script is available on our GitHub repository here.\n\n\nImportantly, the document’s YAML header should include the parameters that vary during report production. In this case, these are:\n\nInstitution name\nSchool year (spring)\n\nWe initialize our default parameter values as Georgetown University for 2022-23.\n---\ntitle: \"Annual institutional sports equity report\"\nformat: pdf\ntheme: litera\ntoc: FALSE\nfontsize: 12pt\nembed-resources: TRUE\npage-layout: full\nparams:\n  inst: Georgetown University\n  year: 2023\ngeometry:\n      - top=2cm\n---\n\n\n\nNext, we use our parameter values to import the proper year of data and subset the data to our institution of interest.\n\n\nCode\n```{r}\n#| eval: false\n#| code-fold: true\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(assertr)\nlibrary(quarto)\nlibrary(readxl)\nlibrary(glue)\nlibrary(kableExtra)\nlibrary(janitor)\n\nroot &lt;- getwd()\n```\n\n\n\n```{r}\n#| eval: false\n\n# place parameters into variables\ncurr_year &lt;- params$year\ninst      &lt;- params$inst\n\n# import year-specific data and subset to specific institution\ndta &lt;- read_excel(file.path(root,glue(\"EADA_{curr_year}.xlsx\")), sheet = 1) %&gt;%\n  filter(institution_name == inst) %&gt;%\n  verify(nrow(.) == 1)\n\n# identify city and state and institution\nlocation &lt;- paste0(dta %&gt;% pull(city_txt),\", \", dta %&gt;% pull(state_cd))\n\n# format academic year\nsy &lt;- paste0(params$year - 1,\"-\",params$year)\n```\n\n\n\n\nWe then employ simple in-line code with markdown formatting to display basic institutional information at the top of the report. We can capitalize on available variables such as NCAA classification (classification_name) to easily display relevant information about the institution.\n**Year:** `r sy`\n\n**Institution:** `r dta %&gt;% pull(institution_name)`\n\n**Location:** `r location`\n\n**Institution type:** `r dta %&gt;% pull(sector_name)`\n\n**NCAA classification:** `r dta %&gt;% pull(classification_name)`\n\n**Total student body size:** `r format(dta %&gt;% pull(EFTotalCount), big.mark = \",\")`\n\n\n\n\nNext, we create our two tables using tidyverse and kableExtra. This is simple data cleaning and table preparation code that is not specific to the parameterized report framework. Thus, the code is available below but hidden by default.\n\n\nCode\n```{r}\n#| eval: false\n#| code-fold: true\n\nall_sports &lt;- dta %&gt;%\n  select(starts_with(c(\"PARTIC_WOMEN\",\"PARTIC_MEN\"))) %&gt;%\n  pivot_longer(cols = everything(), \n               names_to = c(\"gender\", \"Sport\"), \n               values_to = \"participants\",\n               names_pattern = \"PARTIC_(\\\\w+)_(.*)\") %&gt;%\n  filter(!is.na(participants) & participants &gt; 0) %&gt;%\n  mutate(gender = str_to_title(gender),\n         Sport  = case_when(Sport == \"BchVoll\"    ~ \"Beach Volleyball\",\n                            Sport == \"Bskball\"    ~ \"Basketball\",\n                            Sport == \"Eqstrian\"   ~ \"Equestrian\",\n                            Sport == \"FldHcky\"    ~ \"Field Hockey\",\n                            Sport == \"Gymn\"       ~ \"Gymnastics\",\n                            Sport == \"IceHcky\"    ~ \"Ice Hockey\",\n                            Sport == \"Lacrsse\"    ~ \"Lacrosse\",\n                            Sport == \"OthSpts\"    ~ \"other Sports\",\n                            Sport == \"SwimDivng\"  ~ \"Swimming \\\\& Diving\",\n                            Sport == \"SynSwim\"    ~ \"Synchronized Swimming\",\n                            Sport == \"TblTennis\"  ~ \"Table Tennis\",\n                            Sport == \"Trckcomb\"   ~ \"Track \\\\& Field (Combined)\",\n                            Sport == \"TrkFldIn\"   ~ \"Indoor Track \\\\& Field\",\n                            Sport == \"TrkFldOut\"  ~ \"Outdoor Track \\\\& Field\",\n                            Sport == \"Vollball\"   ~ \"Volleyball\",\n                            Sport == \"WaterPolo\"  ~ \"Water Polo\",\n                            Sport == \"WgtLift\"    ~ \"Weightlifting\",\n                            Sport == \"XCountry\"   ~ \"Cross country\",\n                            TRUE                  ~ Sport))\n\ntotal_sports &lt;- all_sports %&gt;%\n  group_by(gender) %&gt;%\n  summarise(n_sports = n()) %&gt;%\n  pivot_wider(names_from = gender, values_from = n_sports) %&gt;%\n  ungroup() %&gt;%\n  select(Women,Men)\n\nsports_by_gender &lt;- all_sports %&gt;%\n  pivot_wider(names_from = gender, values_from = participants) %&gt;%\n  arrange(Sport)\n\ntotal_sports %&gt;%\n  kable(escape = F, booktabs = T, format = \"latex\", align = \"c\", caption = \"Number of total sports offered, by gender\") %&gt;%\n  kable_styling(latex_options = c(\"HOLD_position\",\"repeat_header\"), full_width = TRUE) \n\nsports_by_gender %&gt;%\n  adorn_totals() %&gt;%\n  mutate(across(where(is.numeric), ~as.character(.x))) %&gt;%\n  mutate(across(everything(), ~ifelse(is.na(.x), \"\\u2013\",.x))) %&gt;%\n  kable(escape = F, booktabs = T, format = \"latex\", align = \"c\", caption = \"Number of students participating in sports, by gender\") %&gt;%\n  kable_styling(latex_options = c(\"HOLD_position\",\"repeat_header\"), full_width = TRUE) %&gt;%\n  row_spec(nrow(sports_by_gender), hline_after = T, extra_latex_after = \"%\") %&gt;%\n  row_spec(nrow(sports_by_gender)+1,bold=T) \n```\n\n\nTable 1\n\nTable 2\n\n\n\n\nWe create our figure using ggplot2. Again, this is simple data reshaping and figure preparation code that is not specific to the parameterized report framework. Thus, the code is available below but hidden by default.\n\n\nCode\n```{r}\n#| eval: false\n#| code-fold: true\n\nplot_dta &lt;- dta %&gt;%\n  select(starts_with(c(\"STUDENTAID\",\"RECRUITEXP\",\"ASCOACH_SAL_FTE\",\"HDCOACH_SAL_FTE\")) & !ends_with(c(\"COED\",\"TOTAL\"))) %&gt;%\n  pivot_longer(\n    cols = everything(),\n    names_to = c(\"type\",\"gender\"),\n    values_to = \"expense\",\n    names_pattern = \"(STUDENTAID|RECRUITEXP|HDCOACH_SALARY|ASCOACH_SAL_FTE|HDCOACH_SAL_FTE)_(.*)\"\n  ) \n\ncoach_sal &lt;- plot_dta %&gt;%\n  filter(grepl(\"SAL_FTE\",type, fixed = TRUE)) %&gt;%\n  mutate(type = case_when(grepl(\"ASCOACH\",type,fixed = TRUE) ~ \"Assistant coach\",\n                          TRUE                               ~ \"Head coach\"),\n         gender = case_when(gender == \"WOMN\" ~ \"Women's teams\",\n                            TRUE             ~ \"Men's teams\")) %&gt;%\n  mutate(type = factor(type, levels = c(\"Head coach\",\"Assistant coach\")))\n  \nggplot(data = coach_sal, aes(x = type, y = expense, fill = gender)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", color = \"black\") +\n  geom_text(aes(label = scales::dollar(expense)), position = position_dodge(width = 0.9), vjust = -1) +\n  theme_minimal() +\n  labs(x = \"\",\n       y = \"Average full-time salary\") +\n  ggtitle(\"Figure 1: Average full-time coaching salary, \\nby team gender and coach type\") +\n  theme(plot.title = element_text(hjust = 0.5),\n        legend.title = element_blank(),\n        legend.key = element_blank(),\n        legend.background = element_rect(color = NA),\n        legend.position=\"bottom\") +\n  scale_fill_brewer(palette = \"Accent\") +\n  scale_y_continuous(labels = scales::dollar_format(prefix=\"$\"), expand = c(0.2,0))\n```\n\n\n\n\n\n\nLast, we’ll use our year-specific parameter and inline code to add the citation to identify where we obtained the data for these reports.\n`r glue(\"U.S. Department of Education, Office of Postsecondary Education, Equity in Athletics Disclosure Act (EADA) survey, {sy}.\")`\n\n\n\n\n\nIn the following section, we present the run_reports.R file to execute our reports. This script is also available on our GitHub repository here.\nIn the inst vector, we specify the institutions for which we want to run reports. In the year vector, we identify the year of data to use to prepare the reports. The remaining code tells R to iterate over these vectors and for each institution-year combination call our report_template.qmd, substitute the template parameters with the respective values, and export a PDF.\nThanks!: We obtained the basis for the code below from R for the Rest of Us.\n\n```{r}\n#| eval: false\n\nlibrary(quarto)\nlibrary(tidyverse)\n\ninst &lt;- c(\"Georgetown University\",\n          \"Duke University\",\n          \"Furman University\",\n          \"University of Michigan-Ann Arbor\",\n          \"University of North Carolina at Chapel Hill\")\nyear &lt;- c(2023)\n\nreports &lt;-\n  tibble(\n    input = \"report_template.qmd\",\n    output_file = str_glue(\"{inst} {year} annual sports equity report.pdf\"),\n    execute_params = map2(inst, year, ~ list(inst = .x, year = .y))\n  )\n\npwalk(reports, quarto_render)\n```\n\n\n\n\nWe now have standardized reports for our 5 institutions!\n\n\nDownload PDF file.\n\n\n\nDownload PDF file.\n\n\n\nDownload PDF file.\n\n\n\nDownload PDF file.\n\n\n\nDownload PDF file.\n\n\n\n\n\nIn a cloud environment with distributed computing, we could imagine many use cases for this reporting pipeline. For example, we could efficiently:\n\nProduce these standardized reports for all institutions for all available years\nCreate a much more comprehensive report template by including a far greater number of tables and figures\nCapitalize on two or more years of data for the same institution to create cross-time reports\nUtilize the results of the PCA analysis to identify similar institutions and create a unified PDF report with the snapshot for each institution\n\nThe opportunities are endless!"
  },
  {
    "objectID": "institution-reports.html#concept",
    "href": "institution-reports.html#concept",
    "title": "Designing a data pipeline to analyze gender equity in college sports",
    "section": "",
    "text": "The institution-level structure of the EADA files are ideal for generating standardized, institution-specific reports that provide a snapshot of the sports equity landscape at the institution. Because multiple years of data are available, it is also highly feasible to generate cross-year institution comparison reports, either for a particular institution or for the entire institution universe. Because each file contains 1,800+ institutions and reports are not dependent on one another, this is an ideal task to parallelize in a cloud environment."
  },
  {
    "objectID": "institution-reports.html#report-production-walk-through",
    "href": "institution-reports.html#report-production-walk-through",
    "title": "Designing a data pipeline to analyze gender equity in college sports",
    "section": "",
    "text": "In this section, we present a tutorial on how to prepare year-specific snapshot files for a set of institutions using R. For the purpose of this tutorial, we deployed these steps locally on a small subset of institutions. However, in the final section, we will discuss thoughts for scaling this task up for execution in the cloud.\n\n\nBelow, we illustrate the structure of the EADA data for five institutions from the 2022-23 EADA file (with the first 30 variables).\n\n\n\n\nunitid\nOPEID\ninstitution_name\naddr1_txt\naddr2_txt\ncity_txt\nstate_cd\nzip_text\nClassificationCode\nclassification_name\nClassificationOther\nEFMaleCount\nEFFemaleCount\nEFTotalCount\nsector_cd\nsector_name\nSTUDENTAID_MEN\nSTUDENTAID_WOMEN\nSTUDENTAID_COED\nSTUDENTAID_TOTAL\nSTUAID_MEN_RATIO\nSTUAID_WOMEN_RATIO\nSTUAID_COED_RATIO\nRECRUITEXP_MEN\nRECRUITEXP_WOMEN\nRECRUITEXP_COED\nRECRUITEXP_TOTAL\nHDCOACH_SALARY_MEN\nHDCOACH_SALARY_WOMEN\nHDCOACH_SALARY_COED\n\n\n\n\n131496\n00144500\nGeorgetown University\n37th and O St NW\nGeorgetown University\nWashington\nDC\n200570001\n2\nNCAA Division I-FCS\nNA\n2995\n4153\n7148\n2\nPrivate nonprofit, 4-year or above\n5559743\n5871423\n2478\n11433644\n49\n51\n0\n997498\n153634\n7467\n1158599\n580565\n103748\n109326\n\n\n170976\n00232500\nUniversity of Michigan-Ann Arbor\n1109 Geddes Ave\nNA\nAnn Arbor\nMI\n48109\n1\nNCAA Division I-FBS\nNA\n14705\n16443\n31148\n1\nPublic, 4-year or above\n17929935\n13947339\nNA\n31877274\n56\n44\n0\n3876973\n940960\nNA\n4817933\n1086369\n258780\nNA\n\n\n198419\n00292000\nDuke University\n103 Allen Bldg\nNA\nDurham\nNC\n27708\n1\nNCAA Division I-FBS\nNA\n3114\n3429\n6543\n2\nPrivate nonprofit, 4-year or above\n14309544\n13291616\nNA\n27601160\n52\n48\n0\n2459555\n574848\nNA\n3034403\n687176\n209582\nNA\n\n\n199120\n00297400\nUniversity of North Carolina at Chapel Hill\n103 South Bldg Cb 9100\nNA\nChapel Hill\nNC\n27599\n1\nNCAA Division I-FBS\nNA\n7532\n11630\n19162\n1\nPublic, 4-year or above\n8398938\n6738951\nNA\n15137889\n55\n45\n0\n2155890\n848579\nNA\n3004469\n747659\n255997\nNA\n\n\n218070\n00343400\nFurman University\n3300 Poinsett Highway\nNA\nGreenville\nSC\n296136162\n2\nNCAA Division I-FCS\nNA\n928\n1331\n2259\n2\nPrivate nonprofit, 4-year or above\n7852046\n4732379\nNA\n12584425\n62\n38\n0\n263225\n141196\nNA\n404421\n196422\n99950\nNA\n\n\n\n\n\n\n\n\n\nNext, we identify key statistics we want each report to contain. We will present:\n\nA table with the total number of sports offered, by gender\nA table with the number of students participating in each sport, by gender\nA figure with average full−time coaching salary, by team gender and coach type (head vs. assistant)\n\nIn the following sections, we will discuss key code chunks from our reports_template.qmd file. This is the script that provides the template for our PDF reports. The full script is available on our GitHub repository here.\n\n\nImportantly, the document’s YAML header should include the parameters that vary during report production. In this case, these are:\n\nInstitution name\nSchool year (spring)\n\nWe initialize our default parameter values as Georgetown University for 2022-23.\n---\ntitle: \"Annual institutional sports equity report\"\nformat: pdf\ntheme: litera\ntoc: FALSE\nfontsize: 12pt\nembed-resources: TRUE\npage-layout: full\nparams:\n  inst: Georgetown University\n  year: 2023\ngeometry:\n      - top=2cm\n---\n\n\n\nNext, we use our parameter values to import the proper year of data and subset the data to our institution of interest.\n\n\nCode\n```{r}\n#| eval: false\n#| code-fold: true\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(assertr)\nlibrary(quarto)\nlibrary(readxl)\nlibrary(glue)\nlibrary(kableExtra)\nlibrary(janitor)\n\nroot &lt;- getwd()\n```\n\n\n\n```{r}\n#| eval: false\n\n# place parameters into variables\ncurr_year &lt;- params$year\ninst      &lt;- params$inst\n\n# import year-specific data and subset to specific institution\ndta &lt;- read_excel(file.path(root,glue(\"EADA_{curr_year}.xlsx\")), sheet = 1) %&gt;%\n  filter(institution_name == inst) %&gt;%\n  verify(nrow(.) == 1)\n\n# identify city and state and institution\nlocation &lt;- paste0(dta %&gt;% pull(city_txt),\", \", dta %&gt;% pull(state_cd))\n\n# format academic year\nsy &lt;- paste0(params$year - 1,\"-\",params$year)\n```\n\n\n\n\nWe then employ simple in-line code with markdown formatting to display basic institutional information at the top of the report. We can capitalize on available variables such as NCAA classification (classification_name) to easily display relevant information about the institution.\n**Year:** `r sy`\n\n**Institution:** `r dta %&gt;% pull(institution_name)`\n\n**Location:** `r location`\n\n**Institution type:** `r dta %&gt;% pull(sector_name)`\n\n**NCAA classification:** `r dta %&gt;% pull(classification_name)`\n\n**Total student body size:** `r format(dta %&gt;% pull(EFTotalCount), big.mark = \",\")`\n\n\n\n\nNext, we create our two tables using tidyverse and kableExtra. This is simple data cleaning and table preparation code that is not specific to the parameterized report framework. Thus, the code is available below but hidden by default.\n\n\nCode\n```{r}\n#| eval: false\n#| code-fold: true\n\nall_sports &lt;- dta %&gt;%\n  select(starts_with(c(\"PARTIC_WOMEN\",\"PARTIC_MEN\"))) %&gt;%\n  pivot_longer(cols = everything(), \n               names_to = c(\"gender\", \"Sport\"), \n               values_to = \"participants\",\n               names_pattern = \"PARTIC_(\\\\w+)_(.*)\") %&gt;%\n  filter(!is.na(participants) & participants &gt; 0) %&gt;%\n  mutate(gender = str_to_title(gender),\n         Sport  = case_when(Sport == \"BchVoll\"    ~ \"Beach Volleyball\",\n                            Sport == \"Bskball\"    ~ \"Basketball\",\n                            Sport == \"Eqstrian\"   ~ \"Equestrian\",\n                            Sport == \"FldHcky\"    ~ \"Field Hockey\",\n                            Sport == \"Gymn\"       ~ \"Gymnastics\",\n                            Sport == \"IceHcky\"    ~ \"Ice Hockey\",\n                            Sport == \"Lacrsse\"    ~ \"Lacrosse\",\n                            Sport == \"OthSpts\"    ~ \"other Sports\",\n                            Sport == \"SwimDivng\"  ~ \"Swimming \\\\& Diving\",\n                            Sport == \"SynSwim\"    ~ \"Synchronized Swimming\",\n                            Sport == \"TblTennis\"  ~ \"Table Tennis\",\n                            Sport == \"Trckcomb\"   ~ \"Track \\\\& Field (Combined)\",\n                            Sport == \"TrkFldIn\"   ~ \"Indoor Track \\\\& Field\",\n                            Sport == \"TrkFldOut\"  ~ \"Outdoor Track \\\\& Field\",\n                            Sport == \"Vollball\"   ~ \"Volleyball\",\n                            Sport == \"WaterPolo\"  ~ \"Water Polo\",\n                            Sport == \"WgtLift\"    ~ \"Weightlifting\",\n                            Sport == \"XCountry\"   ~ \"Cross country\",\n                            TRUE                  ~ Sport))\n\ntotal_sports &lt;- all_sports %&gt;%\n  group_by(gender) %&gt;%\n  summarise(n_sports = n()) %&gt;%\n  pivot_wider(names_from = gender, values_from = n_sports) %&gt;%\n  ungroup() %&gt;%\n  select(Women,Men)\n\nsports_by_gender &lt;- all_sports %&gt;%\n  pivot_wider(names_from = gender, values_from = participants) %&gt;%\n  arrange(Sport)\n\ntotal_sports %&gt;%\n  kable(escape = F, booktabs = T, format = \"latex\", align = \"c\", caption = \"Number of total sports offered, by gender\") %&gt;%\n  kable_styling(latex_options = c(\"HOLD_position\",\"repeat_header\"), full_width = TRUE) \n\nsports_by_gender %&gt;%\n  adorn_totals() %&gt;%\n  mutate(across(where(is.numeric), ~as.character(.x))) %&gt;%\n  mutate(across(everything(), ~ifelse(is.na(.x), \"\\u2013\",.x))) %&gt;%\n  kable(escape = F, booktabs = T, format = \"latex\", align = \"c\", caption = \"Number of students participating in sports, by gender\") %&gt;%\n  kable_styling(latex_options = c(\"HOLD_position\",\"repeat_header\"), full_width = TRUE) %&gt;%\n  row_spec(nrow(sports_by_gender), hline_after = T, extra_latex_after = \"%\") %&gt;%\n  row_spec(nrow(sports_by_gender)+1,bold=T) \n```\n\n\nTable 1\n\nTable 2\n\n\n\n\nWe create our figure using ggplot2. Again, this is simple data reshaping and figure preparation code that is not specific to the parameterized report framework. Thus, the code is available below but hidden by default.\n\n\nCode\n```{r}\n#| eval: false\n#| code-fold: true\n\nplot_dta &lt;- dta %&gt;%\n  select(starts_with(c(\"STUDENTAID\",\"RECRUITEXP\",\"ASCOACH_SAL_FTE\",\"HDCOACH_SAL_FTE\")) & !ends_with(c(\"COED\",\"TOTAL\"))) %&gt;%\n  pivot_longer(\n    cols = everything(),\n    names_to = c(\"type\",\"gender\"),\n    values_to = \"expense\",\n    names_pattern = \"(STUDENTAID|RECRUITEXP|HDCOACH_SALARY|ASCOACH_SAL_FTE|HDCOACH_SAL_FTE)_(.*)\"\n  ) \n\ncoach_sal &lt;- plot_dta %&gt;%\n  filter(grepl(\"SAL_FTE\",type, fixed = TRUE)) %&gt;%\n  mutate(type = case_when(grepl(\"ASCOACH\",type,fixed = TRUE) ~ \"Assistant coach\",\n                          TRUE                               ~ \"Head coach\"),\n         gender = case_when(gender == \"WOMN\" ~ \"Women's teams\",\n                            TRUE             ~ \"Men's teams\")) %&gt;%\n  mutate(type = factor(type, levels = c(\"Head coach\",\"Assistant coach\")))\n  \nggplot(data = coach_sal, aes(x = type, y = expense, fill = gender)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", color = \"black\") +\n  geom_text(aes(label = scales::dollar(expense)), position = position_dodge(width = 0.9), vjust = -1) +\n  theme_minimal() +\n  labs(x = \"\",\n       y = \"Average full-time salary\") +\n  ggtitle(\"Figure 1: Average full-time coaching salary, \\nby team gender and coach type\") +\n  theme(plot.title = element_text(hjust = 0.5),\n        legend.title = element_blank(),\n        legend.key = element_blank(),\n        legend.background = element_rect(color = NA),\n        legend.position=\"bottom\") +\n  scale_fill_brewer(palette = \"Accent\") +\n  scale_y_continuous(labels = scales::dollar_format(prefix=\"$\"), expand = c(0.2,0))\n```\n\n\n\n\n\n\nLast, we’ll use our year-specific parameter and inline code to add the citation to identify where we obtained the data for these reports.\n`r glue(\"U.S. Department of Education, Office of Postsecondary Education, Equity in Athletics Disclosure Act (EADA) survey, {sy}.\")`\n\n\n\n\n\nIn the following section, we present the run_reports.R file to execute our reports. This script is also available on our GitHub repository here.\nIn the inst vector, we specify the institutions for which we want to run reports. In the year vector, we identify the year of data to use to prepare the reports. The remaining code tells R to iterate over these vectors and for each institution-year combination call our report_template.qmd, substitute the template parameters with the respective values, and export a PDF.\nThanks!: We obtained the basis for the code below from R for the Rest of Us.\n\n```{r}\n#| eval: false\n\nlibrary(quarto)\nlibrary(tidyverse)\n\ninst &lt;- c(\"Georgetown University\",\n          \"Duke University\",\n          \"Furman University\",\n          \"University of Michigan-Ann Arbor\",\n          \"University of North Carolina at Chapel Hill\")\nyear &lt;- c(2023)\n\nreports &lt;-\n  tibble(\n    input = \"report_template.qmd\",\n    output_file = str_glue(\"{inst} {year} annual sports equity report.pdf\"),\n    execute_params = map2(inst, year, ~ list(inst = .x, year = .y))\n  )\n\npwalk(reports, quarto_render)\n```\n\n\n\n\nWe now have standardized reports for our 5 institutions!\n\n\nDownload PDF file.\n\n\n\nDownload PDF file.\n\n\n\nDownload PDF file.\n\n\n\nDownload PDF file.\n\n\n\nDownload PDF file."
  },
  {
    "objectID": "institution-reports.html#scaling-up",
    "href": "institution-reports.html#scaling-up",
    "title": "Designing a data pipeline to analyze gender equity in college sports",
    "section": "",
    "text": "In a cloud environment with distributed computing, we could imagine many use cases for this reporting pipeline. For example, we could efficiently:\n\nProduce these standardized reports for all institutions for all available years\nCreate a much more comprehensive report template by including a far greater number of tables and figures\nCapitalize on two or more years of data for the same institution to create cross-time reports\nUtilize the results of the PCA analysis to identify similar institutions and create a unified PDF report with the snapshot for each institution\n\nThe opportunities are endless!"
  }
]